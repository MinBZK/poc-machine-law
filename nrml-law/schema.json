{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/toka-corrected-schema.json",
  "title": "TOKA NRML Corrected Schema",
  "description": "Corrected schema based on Gemini analysis of actual toka.nrml.json structure",
  "type": "object",
  "required": ["$schema", "version", "language", "facts"],
  "properties": {
    "$schema": {
      "type": "string"
    },
    "version": {
      "type": "string"
    },
    "language": {
      "type": "string",
      "enum": ["nl", "en"]
    },
    "facts": {
      "type": "object",
      "patternProperties": {
        "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f-]+$": {
          "$ref": "#/$defs/fact"
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "properties": {
        "version": {"type": "string"},
        "language": {"type": "string"},
        "created": {"type": "string"},
        "description": {"type": "string"},
        "legal_basis": {"type": "string"}
      }
    }
  },
  "additionalProperties": false,
  "$defs": {
    "languageObject": {
      "type": "object",
      "patternProperties": {"^[a-z]{2}$": {"type": "string"}},
      "additionalProperties": false,
      "minProperties": 1
    },
    "reference": {
      "type": "object",
      "required": ["$ref"],
      "properties": {
        "$ref": {
          "type": "string",
          "pattern": "^#/facts/[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f-]+(/((items)|(properties)|(roles))/[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-z-]+)?(/versions/[0-9]+)?(/[ab])?$"
        }
      },
      "additionalProperties": false
    },
    "fact": {
      "type": "object",
      "required": ["name", "items"],
      "properties": {
        "name": {"$ref": "#/$defs/languageObject"},
        "definite_article": {"$ref": "#/$defs/languageObject"},
        "animated": {"type": "boolean"},
        "relation": {"type": "string"},
        "items": {
          "type": "object",
          "patternProperties": {
            "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-z-]+$": {
              "$ref": "#/$defs/item"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "item": {
      "type": "object",
      "required": ["name", "versions"],
      "properties": {
        "name": {"$ref": "#/$defs/languageObject"},
        "article": {"$ref": "#/$defs/languageObject"},
        "plural": {"$ref": "#/$defs/languageObject"},
        "versions": {
          "type": "array",
          "items": {
            "oneOf": [
              {"$ref": "#/$defs/typeDefinition"},
              {"$ref": "#/$defs/relationDefinition"},
              {"$ref": "#/$defs/valueInitialization"},
              {"$ref": "#/$defs/conditionalCharacteristic"},
              {"$ref": "#/$defs/calculatedValue"},
              {"$ref": "#/$defs/conditionalValue"},
              {"$ref": "#/$defs/conditionalCalculatedValue"}
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "typeDefinition": {
      "description": "Type definition: has 'type' but no 'target'",
      "type": "object",
      "required": ["validFrom", "type"],
      "properties": {
        "validFrom": {"type": "string"}
      },
      "oneOf": [
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["numeric"]},
            "precision": {"type": "number"},
            "unit": {"type": "string"}
          },
          "additionalProperties": false,
          "not": {"required": ["subtype"]}
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["numeric"]},
            "subtype": {"type": "string", "enum": ["integer", "decimal"]},
            "precision": {"type": "number"},
            "unit": {"type": "string"}
          },
          "required": ["validFrom", "type", "subtype"],
          "additionalProperties": false
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["percentage"]},
            "subtype": {"type": "string", "enum": ["integer", "decimal"]}
          },
          "additionalProperties": false
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["text"]}
          },
          "additionalProperties": false
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["boolean"]}
          },
          "additionalProperties": false
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["enumeration"]},
            "values": {
              "type": "array",
              "items": {"type": "string"},
              "minItems": 1
            }
          },
          "required": ["validFrom", "type", "values"],
          "additionalProperties": false
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["characteristic"]}
          },
          "additionalProperties": false,
          "not": {"required": ["subtype"]}
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["characteristic"]},
            "subtype": {"type": "string", "enum": ["possessive", "adjective"]}
          },
          "required": ["validFrom", "type", "subtype"],
          "additionalProperties": false
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"type": "string", "enum": ["date"]},
            "precision": {"type": "string", "enum": ["days", "months", "years"]}
          },
          "additionalProperties": false
        },
        {
          "properties": {
            "validFrom": {"type": "string"},
            "type": {"$ref": "#/$defs/reference"}
          },
          "additionalProperties": false
        }
      ],
      "not": {"required": ["target"]}
    },
    "relationDefinition": {
      "description": "Relation definition: has 'arguments' array with 2 roles",
      "type": "object",
      "required": ["validFrom", "arguments"],
      "properties": {
        "validFrom": {"type": "string"},
        "arguments": {
          "type": "array",
          "items": {"$ref": "#/$defs/relationRole"},
          "minItems": 2,
          "maxItems": 2
        }
      },
      "additionalProperties": false
    },
    "valueInitialization": {
      "description": "Value initialization: has 'target' + 'value' (no 'condition')",
      "type": "object",
      "required": ["validFrom", "target", "value"],
      "properties": {
        "validFrom": {"type": "string"},
        "validTo": {"type": "string"},
        "target": {
          "type": "array",
          "items": {"$ref": "#/$defs/reference"}
        },
        "value": {"$ref": "#/$defs/valueObject"}
      },
      "additionalProperties": false,
      "not": {
        "anyOf": [
          {"required": ["condition"]},
          {"required": ["expression"]}
        ]
      }
    },
    "conditionalCharacteristic": {
      "description": "Conditional characteristic: has 'target' + 'condition' (no 'value', no 'expression')",
      "type": "object",
      "required": ["validFrom", "target", "condition"],
      "properties": {
        "validFrom": {"type": "string"},
        "validTo": {"type": "string"},
        "target": {
          "type": "array",
          "items": {"$ref": "#/$defs/reference"}
        },
        "condition": {"$ref": "#/$defs/condition"}
      },
      "additionalProperties": false,
      "not": {
        "anyOf": [
          {"required": ["value"]},
          {"required": ["expression"]}
        ]
      }
    },
    "calculatedValue": {
      "description": "Calculated value: has 'target' + 'expression' (no 'condition')",
      "type": "object",
      "required": ["validFrom", "target", "expression"],
      "properties": {
        "validFrom": {"type": "string"},
        "validTo": {"type": "string"},
        "target": {
          "type": "array",
          "items": {"$ref": "#/$defs/reference"}
        },
        "expression": {"$ref": "#/$defs/expression"}
      },
      "additionalProperties": false,
      "not": {"required": ["value"]}
    },
    "conditionalValue": {
      "description": "Conditional value: has 'target' + 'value' + 'condition'",
      "type": "object",
      "required": ["validFrom", "target", "value", "condition"],
      "properties": {
        "validFrom": {"type": "string"},
        "validTo": {"type": "string"},
        "target": {
          "type": "array",
          "items": {"$ref": "#/$defs/reference"}
        },
        "value": {"$ref": "#/$defs/valueObject"},
        "condition": {"$ref": "#/$defs/condition"}
      },
      "additionalProperties": false,
      "not": {"required": ["expression"]}
    },
    "conditionalCalculatedValue": {
      "description": "Conditional calculated value: has 'target' + 'expression' + 'condition'",
      "type": "object",
      "required": ["validFrom", "target", "expression", "condition"],
      "properties": {
        "validFrom": {"type": "string"},
        "validTo": {"type": "string"},
        "target": {
          "type": "array",
          "items": {"$ref": "#/$defs/reference"}
        },
        "expression": {"$ref": "#/$defs/expression"},
        "condition": {"$ref": "#/$defs/condition"}
      },
      "additionalProperties": false,
      "not": {"required": ["value"]}
    },
    "relationRole": {
      "type": "object",
      "required": ["name", "cardinality", "objectType"],
      "properties": {
        "uuid": {"type": "string", "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f-]+$"},
        "name": {"$ref": "#/$defs/languageObject"},
        "article": {"$ref": "#/$defs/languageObject"},
        "plural": {"$ref": "#/$defs/languageObject"},
        "cardinality": {"type": "string", "enum": ["one", "many"]},
        "objectType": {"$ref": "#/$defs/reference"}
      },
      "additionalProperties": false
    },
    "valueObject": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {"type": "string"},
            "value": {},
            "unit": {"type": "string"}
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "parameter": {"$ref": "#/$defs/reference"}
          },
          "required": ["parameter"],
          "additionalProperties": false
        }
      ]
    },
    "condition": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {"type": "string", "enum": ["comparison", "allOf", "anyOf", "not", "exists", "notExists", "exactlyOneOf"]}
      },
      "oneOf": [
        {
          "description": "Comparison condition: requires operator and arguments array",
          "properties": {
            "type": {"type": "string", "enum": ["comparison"]},
            "operator": {"type": "string", "enum": ["equal", "greaterThan", "lessThan", "greaterThanOrEqual", "lessThanOrEqual", "notEqual", "in", "notIn"]},
            "arguments": {
              "type": "array",
              "items": {
                "oneOf": [
                  {"type": "array", "items": {"$ref": "#/$defs/reference"}},
                  {"$ref": "#/$defs/valueObject"}
                ]
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["type", "operator", "arguments"],
          "additionalProperties": false
        },
        {
          "description": "AllOf condition: requires conditions array",
          "properties": {
            "type": {"type": "string", "enum": ["allOf"]},
            "conditions": {
              "type": "array",
              "items": {"$ref": "#/$defs/condition"}
            }
          },
          "required": ["type", "conditions"],
          "additionalProperties": false
        },
        {
          "description": "AnyOf condition: requires conditions array",
          "properties": {
            "type": {"type": "string", "enum": ["anyOf"]},
            "conditions": {
              "type": "array",
              "items": {"$ref": "#/$defs/condition"}
            }
          },
          "required": ["type", "conditions"],
          "additionalProperties": false
        },
        {
          "description": "ExactlyOneOf condition: requires conditions array",
          "properties": {
            "type": {"type": "string", "enum": ["exactlyOneOf"]},
            "conditions": {
              "type": "array",
              "items": {"$ref": "#/$defs/condition"}
            }
          },
          "required": ["type", "conditions"],
          "additionalProperties": false
        },
        {
          "description": "Not condition: requires nested condition",
          "properties": {
            "type": {"type": "string", "enum": ["not"]},
            "condition": {"$ref": "#/$defs/condition"}
          },
          "required": ["type", "condition"],
          "additionalProperties": false
        },
        {
          "description": "Exists condition: requires characteristic array",
          "properties": {
            "type": {"type": "string", "enum": ["exists"]},
            "characteristic": {
              "type": "array",
              "items": {"$ref": "#/$defs/reference"}
            }
          },
          "required": ["type", "characteristic"],
          "additionalProperties": false
        },
        {
          "description": "NotExists condition: requires characteristic array",
          "properties": {
            "type": {"type": "string", "enum": ["notExists"]},
            "characteristic": {
              "type": "array",
              "items": {"$ref": "#/$defs/reference"}
            }
          },
          "required": ["type", "characteristic"],
          "additionalProperties": false
        }
      ]
    },
    "expression": {
      "oneOf": [
        {"$ref": "#/$defs/arithmeticExpression"},
        {"$ref": "#/$defs/aggregationExpression"},
        {"$ref": "#/$defs/distributionExpression"},
        {"$ref": "#/$defs/conditionalExpression"},
        {"$ref": "#/$defs/functionExpression"}
      ]
    },
    "arithmeticExpression": {
      "type": "object",
      "required": ["type", "operator", "arguments"],
      "properties": {
        "type": {"type": "string", "enum": ["arithmetic"]},
        "operator": {"type": "string", "enum": ["add", "subtract", "multiply", "divide", "min", "max"]},
        "arguments": {
          "type": "array",
          "items": {
            "oneOf": [
              {"type": "array", "items": {"$ref": "#/$defs/reference"}},
              {"$ref": "#/$defs/expression"},
              {"type": "object", "properties": {"parameter": {"$ref": "#/$defs/reference"}}, "additionalProperties": false}
            ]
          },
          "minItems": 2
        }
      },
      "additionalProperties": false
    },
    "aggregationExpression": {
      "type": "object",
      "required": ["type", "function", "expression"],
      "properties": {
        "type": {"type": "string", "enum": ["aggregation"]},
        "function": {"type": "string", "enum": ["sum", "count", "min", "max", "avg", "add"]},
        "expression": {
          "type": "array",
          "items": {"$ref": "#/$defs/reference"}
        },
        "default": {"$ref": "#/$defs/valueObject"},
        "condition": {"$ref": "#/$defs/condition"}
      },
      "additionalProperties": false
    },
    "distributionExpression": {
      "type": "object",
      "required": ["type", "source"],
      "properties": {
        "type": {"type": "string", "enum": ["distribution"]},
        "function": {"type": "string", "enum": ["distribute", "allocate"]},
        "source": {
          "type": "array",
          "items": {"$ref": "#/$defs/reference"}
        },
        "method": {"type": "string", "enum": ["equal", "proportional", "weighted", "equal_shares"]},
        "criteria": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {"type": "string", "enum": ["sort", "maximum", "minimum", "ratio"]},
              "field": {
                "type": "array",
                "items": {"$ref": "#/$defs/reference"}
              },
              "order": {"type": "string", "enum": ["ascending", "descending"]},
              "value": {
                "type": "array",
                "items": {"$ref": "#/$defs/reference"}
              },
              "tiebreaker": {
                "type": "object",
                "properties": {
                  "type": {"type": "string", "enum": ["ratio", "random"]},
                  "field": {
                    "type": "array",
                    "items": {"$ref": "#/$defs/reference"}
                  }
                }
              }
            }
          }
        },
        "rounding": {
          "type": "object",
          "properties": {
            "decimals": {"type": "number"},
            "direction": {"type": "string", "enum": ["up", "down", "nearest"]}
          }
        },
        "default": {"$ref": "#/$defs/valueObject"}
      },
      "additionalProperties": false
    },
    "conditionalExpression": {
      "type": "object",
      "required": ["type", "condition", "then"],
      "properties": {
        "type": {"type": "string", "enum": ["conditional"]},
        "condition": {"$ref": "#/$defs/condition"},
        "then": {
          "oneOf": [
            {"type": "array", "items": {"$ref": "#/$defs/reference"}},
            {"$ref": "#/$defs/valueObject"}
          ]
        },
        "else": {
          "oneOf": [
            {"type": "array", "items": {"$ref": "#/$defs/reference"}},
            {"$ref": "#/$defs/valueObject"},
            {"$ref": "#/$defs/conditionalExpression"}
          ]
        }
      },
      "additionalProperties": false
    },
    "functionExpression": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {"type": "string", "enum": ["function"]}
      },
      "oneOf": [
        {
          "description": "TimeDuration function",
          "properties": {
            "type": {"type": "string", "enum": ["function"]},
            "function": {"type": "string", "enum": ["timeDuration"]},
            "arguments": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {"$ref": "#/$defs/reference"}
              },
              "minItems": 2,
              "maxItems": 2
            },
            "unit": {"type": "string", "enum": ["years", "months", "days", "hours", "minutes", "seconds"]},
            "whole": {"type": "boolean"}
          },
          "required": ["type", "function", "arguments"],
          "additionalProperties": false
        },
        {
          "description": "Bounded function", 
          "properties": {
            "type": {"type": "string", "enum": ["function"]},
            "function": {"type": "string", "enum": ["bounded"]},
            "expression": {"$ref": "#/$defs/expression"},
            "minimum": {"$ref": "#/$defs/valueObject"}
          },
          "required": ["type", "function", "expression", "minimum"],
          "additionalProperties": false
        },
        {
          "description": "Rounding function",
          "properties": {
            "type": {"type": "string", "enum": ["function"]}, 
            "function": {"type": "string", "enum": ["rounding"]},
            "expression": {"$ref": "#/$defs/expression"},
            "decimals": {"type": "number"},
            "direction": {"type": "string", "enum": ["up", "down", "nearest"]}
          },
          "required": ["type", "function", "expression"],
          "additionalProperties": false
        }
      ]
    }
  }
}